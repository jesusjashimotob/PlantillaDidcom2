# ------------------------------------------------------------
# Workflow: Sync GitHub Issues with Jira
# Autor: Ing. Jesús Jashimoto
# Fecha: 10 de enero de 2025
# Descripción:
#   Este workflow sincroniza los issues creados en GitHub con Jira.
#   1. Crea una tarea en Jira para cada nuevo issue en GitHub.
#   2. Actualiza el JSON del issue de sincronización con:
#      - Número del issue en GitHub.
#      - Key de Jira.
#      - Título del issue en GitHub.
#   3. Agrega un enlace al issue de GitHub en Jira con:
#      - La URL del issue.
#      - El título del issue.
# ------------------------------------------------------------

  name: Sync GitHub Issues with Jira

  on:
    issues:
      types: [opened]
  
  jobs:
    sync-issue:
      runs-on: ubuntu-latest
  
      steps:
        # 1. Verificar si el Issue Creado NO es el Issue de Sincronización
        - name: Verificar si es el Issue de Sincronización
          id: check-sync-issue
          run: |
            if [[ "${{ github.event.issue.title }}" == "Sincronización GitHub-Jira" ]]; then
              echo "Este es el Issue de Sincronización. Deteniendo workflow."
              exit 0
            fi
            echo "Continuar con la sincronización."
  
        # 2. Obtener el Issue de Sincronización
        - name: Obtener Issue de Sincronización
          id: get-sync-issue
          run: |
            issue=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_PAT }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/issues \
              | jq -r '.[] | select(.title == "Sincronización GitHub-Jira")')
            echo "issue_body=$(echo "$issue" | jq -r '.body')" >> $GITHUB_ENV
            echo "issue_number=$(echo "$issue" | jq -r '.number')" >> $GITHUB_ENV
  
        # 3. Crear Tarea en Jira
        - name: Crear Tarea en Jira
          id: create-jira-task
          run: |
            jira_response=$(curl -s -X POST \
              -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
              -H "Content-Type: application/json" \
              -d '{
                "fields": {
                  "project": {
                    "key": "CDP"
                  },
                  "summary": "${{ github.event.issue.title }}",
                  "description": "${{ github.event.issue.body }}",
                  "issuetype": {
                    "name": "Task"
                  }
                }
              }' \
              ${{ secrets.JIRA_URL }}/rest/api/3/issue)
            echo "jira_key=$(echo "$jira_response" | jq -r '.key')" >> $GITHUB_ENV
  
        # 4. Actualizar el JSON del Issue de Sincronización (con título)
        - name: Actualizar Issue de Sincronización
          run: |
            updated_body=$(echo "${{ env.issue_body }}" | jq --arg gh_issue "${{ github.event.issue.number }}" --arg jira_task "${{ env.jira_key }}" --arg title "${{ github.event.issue.title }}" '.sync.jira.issues += [{"github_issue": $gh_issue, "jira_task": $jira_task, "github_title": $title}]')
            curl -X PATCH -H "Authorization: Bearer ${{ secrets.GITHUB_PAT }}" \
              -H "Accept: application/vnd.github+json" \
              -d "{\"body\": $updated_body}" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ env.issue_number }}
  
        # 5. Agregar el enlace del Issue en GitHub a la Tarea en Jira
        - name: Enviar enlace del Issue de GitHub a Jira
          run: |
            curl -X POST \
              -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
              -H "Content-Type: application/json" \
              -d '{
                "object": {
                  "url": "${{ github.event.issue.html_url }}",
                  "title": "${{ github.event.issue.title }}"
                }
              }' \
              ${{ secrets.JIRA_URL }}/rest/api/2/issue/${{ env.jira_key }}/remotelink
  