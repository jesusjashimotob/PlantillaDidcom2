# Workflow: Diagnóstico Completo de Petición a Jira
name: Diagnóstico Completo de Petición a Jira

on:
  issues:
    types: [opened]

jobs:
  diagnose-jira-request:
    runs-on: ubuntu-latest

    steps:
      # Verificar configuración de secrets
      - name: Verificar configuración de secrets
        run: |
          if [[ -z "${{ secrets.JIRA_USERNAME }}" || -z "${{ secrets.JIRA_API_TOKEN }}" || -z "${{ secrets.JIRA_URL }}" ]]; then
            echo "Error: Faltan configuraciones en los secrets (JIRA_USERNAME, JIRA_API_TOKEN, JIRA_URL)."
            exit 1
          fi
          echo "Secrets configurados correctamente."

      # Diagnóstico e impresión de la petición
      - name: Mostrar configuración de la petición a Jira
        run: |
          # Definir fecha de vencimiento un mes a partir de ahora
          due_date=$(date -d "+1 month" "+%Y-%m-%d")

          # Construir el body de la petición
          request_body=$(cat <<EOF
{
  "fields": {
    "project": {
      "key": "CDP"
    },
    "summary": "Prueba insert jira taks for github issue 5",
    "issuetype": {
      "name": "Task"
    },
    "components": [
      {
        "name": "Firmware"
      },
      {
        "name": "Sin Asignar"
      }
    ],
    "duedate": "$due_date"
  }
}
EOF
          )

          # Mostrar información completa de la petición
          echo "=== Configuración de la petición ==="
          echo "URL: ${{ secrets.JIRA_URL }}/rest/api/3/issue"
          echo "Headers:"
          echo "  Authorization: Basic $(echo -n '${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }}' | base64)"
          echo "  Content-Type: application/json"
          echo "Body:"
          echo "$request_body"
          echo "Tipo de petición: POST"

      # Realizar la petición
      - name: Realizar petición a Jira
        run: |
          due_date=$(date -d "+1 month" "+%Y-%m-%d")
          request_body=$(cat <<EOF
{
  "fields": {
    "project": {
      "key": "CDP"
    },
    "summary": "Prueba insert jira taks for github issue 5",
    "issuetype": {
      "name": "Task"
    },
    "components": [
      {
        "name": "Firmware"
      },
      {
        "name": "Sin Asignar"
      }
    ],
    "duedate": "$due_date"
  }
}
EOF
          )

          # Enviar petición
          jira_response=$(curl -s -X POST \
            -H "Authorization: Basic $(echo -n "${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }}" | base64)" \
            -H "Content-Type: application/json" \
            -d "$request_body" \
            "${{ secrets.JIRA_URL }}/rest/api/3/issue")

          # Verificar la respuesta
          echo "Respuesta de Jira: $jira_response"
          jira_key=$(echo "$jira_response" | jq -r '.key')
          if [[ -z "$jira_key" || "$jira_key" == "null" ]]; then
            echo "Error: No se pudo crear la tarea en Jira. Revisa los logs."
            exit 1
          fi
          echo "Tarea en Jira creada con éxito. Key: $jira_key"
